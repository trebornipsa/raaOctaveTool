/****************************************************************************
** Meta object code from reading C++ file 'raaNetwork.h'
**
** Created by: The Qt Meta Object Compiler version 67 (Qt 5.7.0)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include "raaNetwork.h"
#include <QtCore/qbytearray.h>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'raaNetwork.h' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 67
#error "This file was generated using the moc from 5.7.0. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

QT_BEGIN_MOC_NAMESPACE
struct qt_meta_stringdata_raaNet__raaNetwork_t {
    QByteArrayData data[12];
    char stringdata0[136];
};
#define QT_MOC_LITERAL(idx, ofs, len) \
    Q_STATIC_BYTE_ARRAY_DATA_HEADER_INITIALIZER_WITH_OFFSET(len, \
    qptrdiff(offsetof(qt_meta_stringdata_raaNet__raaNetwork_t, stringdata0) + ofs \
        - idx * sizeof(QByteArrayData)) \
    )
static const qt_meta_stringdata_raaNet__raaNetwork_t qt_meta_stringdata_raaNet__raaNetwork = {
    {
QT_MOC_LITERAL(0, 0, 18), // "raaNet::raaNetwork"
QT_MOC_LITERAL(1, 19, 7), // "tcpRead"
QT_MOC_LITERAL(2, 27, 0), // ""
QT_MOC_LITERAL(3, 28, 10), // "raaTcpMsg*"
QT_MOC_LITERAL(4, 39, 8), // "tcpState"
QT_MOC_LITERAL(5, 48, 13), // "raaTcpThread*"
QT_MOC_LITERAL(6, 62, 7), // "udpRead"
QT_MOC_LITERAL(7, 70, 10), // "raaUdpMsg*"
QT_MOC_LITERAL(8, 81, 8), // "udpState"
QT_MOC_LITERAL(9, 90, 13), // "raaUdpThread*"
QT_MOC_LITERAL(10, 104, 15), // "tcpStateChanged"
QT_MOC_LITERAL(11, 120, 15) // "udpStateChanged"

    },
    "raaNet::raaNetwork\0tcpRead\0\0raaTcpMsg*\0"
    "tcpState\0raaTcpThread*\0udpRead\0"
    "raaUdpMsg*\0udpState\0raaUdpThread*\0"
    "tcpStateChanged\0udpStateChanged"
};
#undef QT_MOC_LITERAL

static const uint qt_meta_data_raaNet__raaNetwork[] = {

 // content:
       7,       // revision
       0,       // classname
       0,    0, // classinfo
       6,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       4,       // signalCount

 // signals: name, argc, parameters, tag, flags
       1,    1,   44,    2, 0x06 /* Public */,
       4,    2,   47,    2, 0x06 /* Public */,
       6,    1,   52,    2, 0x06 /* Public */,
       8,    2,   55,    2, 0x06 /* Public */,

 // slots: name, argc, parameters, tag, flags
      10,    2,   60,    2, 0x0a /* Public */,
      11,    2,   65,    2, 0x0a /* Public */,

 // signals: parameters
    QMetaType::Void, 0x80000000 | 3,    2,
    QMetaType::Void, 0x80000000 | 5, QMetaType::UInt,    2,    2,
    QMetaType::Void, 0x80000000 | 7,    2,
    QMetaType::Void, 0x80000000 | 9, QMetaType::UInt,    2,    2,

 // slots: parameters
    QMetaType::Void, 0x80000000 | 5, QMetaType::UInt,    2,    2,
    QMetaType::Void, 0x80000000 | 9, QMetaType::UInt,    2,    2,

       0        // eod
};

void raaNet::raaNetwork::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        raaNetwork *_t = static_cast<raaNetwork *>(_o);
        Q_UNUSED(_t)
        switch (_id) {
        case 0: _t->tcpRead((*reinterpret_cast< raaTcpMsg*(*)>(_a[1]))); break;
        case 1: _t->tcpState((*reinterpret_cast< raaTcpThread*(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 2: _t->udpRead((*reinterpret_cast< raaUdpMsg*(*)>(_a[1]))); break;
        case 3: _t->udpState((*reinterpret_cast< raaUdpThread*(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 4: _t->tcpStateChanged((*reinterpret_cast< raaTcpThread*(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        case 5: _t->udpStateChanged((*reinterpret_cast< raaUdpThread*(*)>(_a[1])),(*reinterpret_cast< uint(*)>(_a[2]))); break;
        default: ;
        }
    } else if (_c == QMetaObject::IndexOfMethod) {
        int *result = reinterpret_cast<int *>(_a[0]);
        void **func = reinterpret_cast<void **>(_a[1]);
        {
            typedef void (raaNetwork::*_t)(raaTcpMsg * );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&raaNetwork::tcpRead)) {
                *result = 0;
                return;
            }
        }
        {
            typedef void (raaNetwork::*_t)(raaTcpThread * , unsigned int );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&raaNetwork::tcpState)) {
                *result = 1;
                return;
            }
        }
        {
            typedef void (raaNetwork::*_t)(raaUdpMsg * );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&raaNetwork::udpRead)) {
                *result = 2;
                return;
            }
        }
        {
            typedef void (raaNetwork::*_t)(raaUdpThread * , unsigned int );
            if (*reinterpret_cast<_t *>(func) == static_cast<_t>(&raaNetwork::udpState)) {
                *result = 3;
                return;
            }
        }
    }
}

const QMetaObject raaNet::raaNetwork::staticMetaObject = {
    { &QTcpServer::staticMetaObject, qt_meta_stringdata_raaNet__raaNetwork.data,
      qt_meta_data_raaNet__raaNetwork,  qt_static_metacall, Q_NULLPTR, Q_NULLPTR}
};


const QMetaObject *raaNet::raaNetwork::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *raaNet::raaNetwork::qt_metacast(const char *_clname)
{
    if (!_clname) return Q_NULLPTR;
    if (!strcmp(_clname, qt_meta_stringdata_raaNet__raaNetwork.stringdata0))
        return static_cast<void*>(const_cast< raaNetwork*>(this));
    return QTcpServer::qt_metacast(_clname);
}

int raaNet::raaNetwork::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QTcpServer::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 6)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 6;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 6)
            *reinterpret_cast<int*>(_a[0]) = -1;
        _id -= 6;
    }
    return _id;
}

// SIGNAL 0
void raaNet::raaNetwork::tcpRead(raaTcpMsg * _t1)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 0, _a);
}

// SIGNAL 1
void raaNet::raaNetwork::tcpState(raaTcpThread * _t1, unsigned int _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 1, _a);
}

// SIGNAL 2
void raaNet::raaNetwork::udpRead(raaUdpMsg * _t1)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)) };
    QMetaObject::activate(this, &staticMetaObject, 2, _a);
}

// SIGNAL 3
void raaNet::raaNetwork::udpState(raaUdpThread * _t1, unsigned int _t2)
{
    void *_a[] = { Q_NULLPTR, const_cast<void*>(reinterpret_cast<const void*>(&_t1)), const_cast<void*>(reinterpret_cast<const void*>(&_t2)) };
    QMetaObject::activate(this, &staticMetaObject, 3, _a);
}
QT_END_MOC_NAMESPACE
